/*
* Copyright (c) 2002 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:    LandmarksUi Content File -    Contains all the resources for lmkui.dll.
*
*/







//  RESOURCE IDENTIFIER

NAME    LMUI

//  INCLUDES
#include <eikon.rh>
#include <uikon.rh> 
#include <avkon.rsg> 
#include <avkon.rh>
#include <avkon.hrh>
#include <avkon.mbg> 
#include <avkon.loc>
#include "landmarks.hrh"
#include <landmarks.loc>
#include <lmkmsgviewer.loc>

//  CONSTANTS  
#define LMK_QUERY_EDWIN_WIDTH 5
#define LMK_QUERY_EDWIN_LINES 5
#define LMK_QUERY_EDWIN_MAXLENGTH 124

//  RESOURCE DEFINITIONS 

RESOURCE RSS_SIGNATURE { } 

//----------------------------------------------------
//   
//    r_lmk_lm_selector_navi_decorator
//    
//
//----------------------------------------------------
//
RESOURCE TAB_GROUP r_lmk_lm_selector_navi_decorator
    {
	tab_width = EAknTabWidthWithTwoTabs;  // two tabs
	active = 0;
	tabs =
		{
		TAB
			{
            id = ETabLandmarkList;
            txt = "Lm";
            },
		TAB
			{
            id = ETabCategoryList;
            txt = "Cat";
			}
		};
	}

//----------------------------------------------------
//   
//    r_lmk_selector_ok_back_dlg
//    
//
//----------------------------------------------------
//
RESOURCE DIALOG r_lmk_selector_ok_back_dlg
	{
	flags = EAknDialogMarkableList | EEikDialogFlagFillAppClientRect | EEikDialogFlagNotifyEsc;
	buttons = R_AVKON_SOFTKEYS_OK_BACK;
	items =
		{ 
		DLG_LINE
			{ 
			type = EAknCtSingleGraphicListBox;
			id = ESelectionListControl;
			control = LISTBOX
				{
				flags = EAknListBoxMarkableList;
				};
			},
		DLG_LINE  
			{
			itemflags = EEikDlgItemNonFocusing;
			id = EFindControl;
			type = EAknCtSelectionListFixedFind;
			}
		};
	} 

//----------------------------------------------------
//   
//    r_lmk_selector_ok_back_multi_dlg
//    
//
//----------------------------------------------------
//
RESOURCE DIALOG r_lmk_selector_ok_back_multi_dlg
	{
	flags = EAknDialogMultiselectionList | EEikDialogFlagFillAppClientRect | EEikDialogFlagNotifyEsc;
	buttons = R_AVKON_SOFTKEYS_OK_BACK;
	items =
		{ 
		DLG_LINE
			{ 
			type = EAknCtSingleGraphicListBox;
			id = ESelectionListControl;
			control = LISTBOX
				{
			    #ifdef RD_SCALABLE_UI_V2
                flags =	EAknListBoxStylusMultiselectionList;
                #else
                flags = EAknListBoxMultiselectionList;
                #endif
				};
			},
		DLG_LINE  
			{
			itemflags = EEikDlgItemNonFocusing;
			id = EFindControl;
			type = EAknCtSelectionListFixedFind;
			}
		};
	} 

//----------------------------------------------------
//   
//    r_lmk_selector_ok_cancel_dlg
//    
//
//----------------------------------------------------
//
RESOURCE DIALOG r_lmk_selector_ok_cancel_dlg
	{
	flags = EAknDialogMarkableList | EEikDialogFlagFillAppClientRect | EEikDialogFlagNotifyEsc;
	buttons = R_AVKON_SOFTKEYS_OK_CANCEL;
	items =
		{ 
		DLG_LINE
			{ 
			type = EAknCtSingleGraphicListBox;
			id = ESelectionListControl;
			control = LISTBOX
				{
				flags = EAknListBoxMarkableList;
				};
			},
		DLG_LINE  
			{
			itemflags = EEikDlgItemNonFocusing;
			id = EFindControl;
			type = EAknCtSelectionListFixedFind;
			}
		};
	} 

//----------------------------------------------------
//   
//    r_lmk_category_selector_ok_cancel_multi_dlg
//    
//
//----------------------------------------------------
//
RESOURCE DIALOG r_lmk_category_selector_ok_cancel_multi_dlg
	{
	flags = EAknDialogMultiselectionList | EEikDialogFlagFillAppClientRect | EEikDialogFlagNotifyEsc;
	//buttons = R_AVKON_SOFTKEYS_OK_CANCEL;
	buttons = r_lmk_catsel_softkeys_ok_cancel;
	items =
		{ 
		DLG_LINE
			{ 
			type = EAknCtSingleGraphicListBox;
			id = ESelectionListControl;
			control = LISTBOX
				{
                #ifdef RD_SCALABLE_UI_V2
                flags =	EAknListBoxStylusMultiselectionList;
                #else
                flags = EAknListBoxMultiselectionList;
                #endif
				};
			},
		DLG_LINE  
			{
			itemflags = EEikDlgItemNonFocusing;
			id = EFindControl;
			type = EAknCtSelectionListFixedFind;
			}
		};
	} 



//----------------------------------------------------
//   
//    r_lmk_softkeys_open_cancel
//    
//
//----------------------------------------------------
//
RESOURCE CBA  r_lmk_catsel_softkeys_ok_cancel
    {
    buttons =
        {
        CBA_BUTTON
            {
            id = EAknSoftkeyDone; // No dedicated id for "Open" exists
            //txt = text_softkey_open;
	    txt = text_softkey_ok; 	
            },
        CBA_BUTTON
            {
            id = EAknSoftkeyCancel;
            txt = text_softkey_cancel;
            }
        };
    }

//----------------------------------------------------
//   
//    r_lmk_selector_ok_cancel_multi_dlg
//    
//
//----------------------------------------------------
//
RESOURCE DIALOG r_lmk_selector_ok_cancel_multi_dlg
	{
	flags = EAknDialogMultiselectionList | EEikDialogFlagFillAppClientRect | EEikDialogFlagNotifyEsc;
	buttons = R_AVKON_SOFTKEYS_OK_CANCEL;
	items =
		{ 
		DLG_LINE
			{ 
			type = EAknCtSingleGraphicListBox;
			id = ESelectionListControl;
			control = LISTBOX
				{
                #ifdef RD_SCALABLE_UI_V2
                flags =	EAknListBoxStylusMultiselectionList;
                #else
                flags = EAknListBoxMultiselectionList;
                #endif
				};
			},
		DLG_LINE  
			{
			itemflags = EEikDlgItemNonFocusing;
			id = EFindControl;
			type = EAknCtSelectionListFixedFind;
			}
		};
	} 

//----------------------------------------------------
//   
//    r_lmk_selector_open_cancel_dlg
//    
//
//----------------------------------------------------
//
RESOURCE DIALOG r_lmk_selector_open_cancel_dlg
	{
	flags = EAknDialogMarkableList | EEikDialogFlagFillAppClientRect | EEikDialogFlagNotifyEsc;
	buttons = r_lmk_softkeys_open_cancel;
	items =
		{ 
		DLG_LINE
			{ 
			type = EAknCtSingleGraphicListBox;
			id = ESelectionListControl;
			control = LISTBOX
				{
				flags = EAknListBoxMarkableList;
				};
			},
		DLG_LINE  
			{
			itemflags = EEikDlgItemNonFocusing;
			id = EFindControl;
			type = EAknCtSelectionListFixedFind;
			}
		};
	} 

//----------------------------------------------------
//   
//    r_lmk_softkeys_open_cancel
//    
//
//----------------------------------------------------
//
RESOURCE CBA r_lmk_softkeys_open_cancel
    {
    buttons =
        {
        CBA_BUTTON
            {
            id = EAknSoftkeyOk; // No dedicated id for "Open" exists
            txt = text_softkey_open;
            },
        CBA_BUTTON
            {
            id = EAknSoftkeyCancel;
            txt = text_softkey_cancel;
            }
        };
    }

//----------------------------------------------------
//   
//    r_lmk_empty_menubar
//    
//
//----------------------------------------------------
//
RESOURCE MENU_BAR r_lmk_empty_menubar
	{
	titles = {};
	}

//----------------------------------------------------
//   
//    r_lmk_query
//    
//
//----------------------------------------------------
//
RESOURCE DIALOG r_lmk_query
	{
	flags = EGeneralQueryFlags;
	buttons = R_AVKON_SOFTKEYS_YES_NO;
	items = 
		{
		DLG_LINE
			{
			type = EAknCtQuery;
			id = EGeneralQuery;
			control = AVKON_CONFIRMATION_QUERY
				{
				layout = EConfirmationQueryLayout;
				};
			}
		};
	}

//----------------------------------------------------
//   
//    r_lmk_delete_category
//    Text for confirmation query
//
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_delete_category
    {
    buf = qtn_lm_conf_delete_category;
    }
  
//----------------------------------------------------
//   
//    r_lmk_delete_categories
//    Text for confirmation query
//
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_delete_categories
    {
    buf = qtn_lm_conf_delete_categories;
    }

//----------------------------------------------------
//   
//    r_lmk_delete_landmark
//    Text for confirmation query
//
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_delete_landmark
    {
    buf = qtn_lm_conf_delete_landmark;
    }

//----------------------------------------------------
//   
//    r_lmk_delete_landmarks
//    Text for confirmation query
//
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_delete_landmarks
    {
    buf = qtn_lm_conf_delete_landmarks;
    }

  

//----------------------------------------------------
//   
//    r_lmk_category_selector_title
//    Title for category selector
//
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_category_selector_title
    {
    buf = qtn_lm_title_categories;
    }

//----------------------------------------------------
//   
//    r_lmk_landmark_selector_title
//    Title for landmark selector
//
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_landmark_selector_title
    {
    buf = qtn_lm_title_landmarks;
    }

//----------------------------------------------------
//   
//    r_lmk_category_name_query
//    categories name query
//
//----------------------------------------------------
//
RESOURCE DIALOG r_lmk_category_name_query
  {
  flags = EGeneralQueryFlags;
  buttons = R_AVKON_SOFTKEYS_OK_CANCEL;
  items =
    {
    DLG_LINE
      {
      type = EAknCtQuery;
      id = EGeneralQuery;
      control = AVKON_DATA_QUERY
        {       		
		layout = EDataLayout;
		label = qtn_lm_prompt_category_name; 
        control = EDWIN
          {
          flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable;
          width = LMK_QUERY_EDWIN_WIDTH;
          lines = LMK_QUERY_EDWIN_LINES;
          maxlength = LMK_QUERY_EDWIN_MAXLENGTH;
          };
        };
      }
    };
  } 

//----------------------------------------------------
//   
//    r_lmk_category_name_exists_note
//    Category name already exists information note
//
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_category_name_exists_note
    {
    buf = qtn_lm_note_category_name_already_exists;
    }

//----------------------------------------------------
//   
//    r_lmk_icon_selector_title
//    Title of icon selector
//
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_icon_selector_title
    {
    buf = qtn_lm_heading_select_icon;
    }

//----------------------------------------------------
//   
//    r_lmk_deleting_wait_note
//    Deleting wait note
//
//----------------------------------------------------
//
RESOURCE DIALOG r_lmk_deleting_wait_note
	{	
	flags = EAknWaitNoteFlags | EEikDialogFlagWait;
    buttons = R_AVKON_SOFTKEYS_CANCEL;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EGeneralNote;
            control= AVKON_NOTE 
                { 
                layout = EWaitLayout;
                singular_label = qtn_fldr_deleting_wait_note;
                animation = R_QGN_GRAF_WAIT_BAR_ANIM;
                };
            }
        };
	}

//----------------------------------------------------
//   
//    r_lmk_request_location
//    Progress note 
//
//----------------------------------------------------
//
RESOURCE DIALOG r_lmk_request_location
	{	
	flags = EAknWaitNoteFlags | EEikDialogFlagWait;
    buttons = R_AVKON_SOFTKEYS_CANCEL;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EGeneralNote;
            control= AVKON_NOTE 
                { 
                layout = EWaitLayout;
                singular_label = qtn_lm_wait_requesting_location;
                animation = R_QGN_GRAF_WAIT_BAR_ANIM;
                };
            }
        };
	}

//----------------------------------------------------
//   
//    r_lmk_processing_wait_note
//    Processing wait note
//
//----------------------------------------------------
//
RESOURCE DIALOG r_lmk_processing_wait_note
	{	
	flags = EAknWaitNoteFlags | EEikDialogFlagWait;
    buttons = R_AVKON_SOFTKEYS_CANCEL;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EGeneralNote;
            control= AVKON_NOTE 
                { 
                layout = EWaitLayout;
                singular_label = qtn_gen_note_processing;
                animation = R_QGN_GRAF_WAIT_BAR_ANIM;
                };
            }
        };
	}
//----------------------------------------------------
//   
//    r_lmk_category_settings_empty
//    Category settings view's items empty text
//
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_category_settings_empty
    {
    buf = qtn_lm_list_category_empty;
    }

//----------------------------------------------------
//   
//    r_lmk_category_settings_empty
//    Category settings view's items empty text
//
//----------------------------------------------------
//
RESOURCE DIALOG r_empty_dialog	
    {
	flags = EEikDialogFlagFillAppClientRect | EEikDialogFlagCbaButtons;
	buttons = R_AVKON_SOFTKEYS_EMPTY; 
    items =
        {
        };
    } 	

//----------------------------------------------------
//   
//    r_lmk_lm_list_uncategorised
//    
//
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_lm_list_uncategorised
    {
    buf = qtn_lm_list_uncategorised;
    }
    
//----------------------------------------------------
//   
//    r_lmk_no_categories_available
//    
//
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_no_categories_available
    {
    buf = qtn_lm_no_categories_available;
    }
    
//----------------------------------------------------
//   
//    r_lmk_note_no_number_to_name
//    No phone number available note
//
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_note_no_number_to_name
    {
    buf = qtn_lm_note_no_number;
    }       

    
//----------------------------------------------------   
//    r_lmk_memlo_not_enough_memory
//    Out of memory note
//
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_memlo_not_enough_memory
	{
	buf = qtn_memlo_not_enough_memory;
	}  
	
//----------------------------------------------------
//   
//    r_lmk_no_landmarks_create_with_application
//    Create landmark with landmark application
//
//----------------------------------------------------
//
	RESOURCE TBUF r_lmk_no_landmarks_create_with_application
    {
    buf = qtn_lm_lmsel_no_landmarks;
    }
    
//----------------------------------------------------
//   
//    qtn_lm_show_error_no_data
//    No data in selected landmark 
//
//----------------------------------------------------
//
RESOURCE TBUF r_lm_show_error_no_data
    {
	buf = qtn_lm_show_error_no_data;
    }

//----------------------------------------------------
//   
//    r_lm_show_error_no_coordinates
//    No data in landmarks available
//
//----------------------------------------------------
//
RESOURCE TBUF r_lm_show_error_no_coordinates
    {
	buf = qtn_lm_show_error_no_coordinates;
    }

//----------------------------------------------------
//   
//    r_lm_show_query_no_coordinates_single
//    No data in landmark available
//
//----------------------------------------------------
//
RESOURCE TBUF r_lm_show_query_no_coordinates_single
    {
	buf = qtn_lm_show_query_no_coordinates_single;
    }

//----------------------------------------------------
//   
//    r_lm_show_query_no_coordinates_several
//    No data in landmarks available
//
//----------------------------------------------------
//
RESOURCE TBUF r_lm_show_query_no_coordinates_several
    {
	buf = qtn_lm_show_query_no_coordinates_several;
    }

//----------------------------------------------------
//   
//    r_lm_show_error_category_no_coordinates
//    No data in landmarks available in category note
//
//----------------------------------------------------
//
RESOURCE TBUF r_lm_show_error_category_no_coordinates
    {
	buf = qtn_lm_show_error_category_no_coordinates;
    }

//----------------------------------------------------
//   
//    r_lm_show_query_category_no_coordinates_single
//    No data in landmarks available in category note
//
//----------------------------------------------------
//
RESOURCE TBUF r_lm_show_query_category_no_coordinates_single
    {
	buf = qtn_lm_show_query_category_no_coordinates_single;
    }

//----------------------------------------------------
//   
//    r_lm_show_query_category_no_coordinates_several
//    No data in landmarks available in category note
//
//----------------------------------------------------
//
RESOURCE TBUF r_lm_show_query_category_no_coordinates_several
    {
	buf = qtn_lm_show_query_category_no_coordinates_several;
    }

//----------------------------------------------------
//   
//    r_lm_select_from_map
//    String to proviers for select from map use case
//
//----------------------------------------------------
//
RESOURCE TBUF r_lm_select_from_map
    {
	buf = qtn_lm_select_from_map;
    }

//----------------------------------------------------
//   
//    r_empty_landmark_dialog
//    
//
//----------------------------------------------------
//    
RESOURCE DIALOG r_empty_landmark_dialog
	{
	flags = EGeneralQueryFlags;
	buttons = R_AVKON_SOFTKEYS_YES_NO;
	items = 
		{
		DLG_LINE
			{
			type = EAknCtQuery;
			id = EGeneralQuery;
			control = AVKON_CONFIRMATION_QUERY
				{
				layout = EConfirmationQueryLayout;
				};
			}
		};
	}

//----------------------------------------------------
//   
//    r_empty_landmarks_dialog
//    
//
//----------------------------------------------------
//    
RESOURCE DIALOG r_empty_landmarks_dialog
	{
	flags = EGeneralQueryFlags;
	buttons = R_AVKON_SOFTKEYS_YES_NO;
	items = 
		{
		DLG_LINE
			{
			type = EAknCtQuery;
			id = EGeneralQuery;
			control = AVKON_CONFIRMATION_QUERY
				{
				layout = EConfirmationQueryLayout;
				};
			}
		};
	}

	
//----------------------------------------------------
//   
//    r_lmkui_processing_wait_note
//    General wait note
//
//----------------------------------------------------
//
RESOURCE DIALOG r_lmkui_processing_wait_note
	{	
	flags = EAknWaitNoteFlags | EEikDialogFlagWait;
    buttons = R_AVKON_SOFTKEYS_EMPTY;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EGeneralNote;
            control= AVKON_NOTE 
                { 
                layout = EWaitLayout;
                singular_label = qtn_gen_note_processing;
                animation = R_QGN_GRAF_WAIT_BAR_ANIM;
                };
            }
        };
	}

RESOURCE DIALOG r_lmk_icon_table_dialog
    {
    flags = EGeneralQueryFlags | EEikDialogFlagNoBorder | EEikDialogFlagNoShadow;
    buttons = r_lmk_icon_softkeys_select_cancel_select;
    items=
        {
        DLG_LINE
            {
            type = EAknCtPopupHeadingPane;
            id = EAknSCTQueryHeadingId;
            control = AVKON_HEADING
                {
                headinglayout = R_AVKON_SCT_LIST_HEADING_PANE;//r_avkon_sct_list_heading_pane;
                };
            },
        DLG_LINE
            {
            type = ELmkCtIconMap;//0x2001
            id = ELmkIconMapContentId;
            }
        };
    }

//----------------------------------------------------
//   
//    r_lmk_single_selector_softkeys_ok_cancel_ok
//    CBA with left & msk are same.
//
//----------------------------------------------------
//
RESOURCE CBA r_lmk_selector_softkeys_ok_cancel_ok
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_ok;},
        CBA_BUTTON {id=EAknSoftkeyCancel; txt = text_softkey_cancel; },
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_ok;}
        };
    }
//----------------------------------------------------
//   
//    r_lmk_selector_softkeys_ok_back_ok
//    CBA ok ok back
//
//----------------------------------------------------
//
RESOURCE CBA r_lmk_selector_softkeys_ok_back_ok
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_ok;},
        CBA_BUTTON {id=EAknSoftkeyBack; txt = text_softkey_back; },
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_ok;}
        };
    }

//----------------------------------------------------
//   
//    r_lmk_selector_softkeys_open_cancel_open
//    CBA open open cancel
//
//----------------------------------------------------
//
RESOURCE CBA r_lmk_selector_softkeys_open_cancel_open
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_open;},
        CBA_BUTTON {id=EAknSoftkeyCancel; txt = text_softkey_cancel; },
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_open;}
        };
    }    

//----------------------------------------------------
//   
//    r_lmk_selector_softkeys_done_cancel_done
//    CBA done done cancel
//
//----------------------------------------------------
//
RESOURCE CBA r_lmk_selector_softkeys_done_cancel_done
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyDone; txt=text_softkey_ok;},
        CBA_BUTTON {id=EAknSoftkeyCancel; txt = text_softkey_cancel; },
        CBA_BUTTON {id=EAknSoftkeyDone; txt=text_softkey_ok;}
        };
    }        
//----------------------------------------------------
//   
//    r_lmk_icon_softkeys_select_cancel_select
//    CBA with left & msk are same.
//
//----------------------------------------------------
//
RESOURCE CBA r_lmk_icon_softkeys_select_cancel_select
    {
    buttons =
        {
        AVKON_CBA_BUTTON{id=EAknSoftkeySelect; longpressid=0; txt= text_softkey_select; },
        CBA_BUTTON{id=EAknSoftkeyCancel; txt= text_softkey_cancel; },
        CBA_BUTTON{id=EAknSoftkeySelect; txt= text_softkey_select; }
        };
    }

//----------------------------------------------------
//   
//    r_lm_msk_mark
//    Mark string
//
//----------------------------------------------------
//
RESOURCE TBUF r_lm_msk_mark
    {
	buf = qtn_msk_mark;
    }
//----------------------------------------------------
//   
//    r_lm_unmark
//    UnMark string
//
//----------------------------------------------------
//
RESOURCE TBUF r_lm_msk_unmark
    {
	buf = qtn_msk_unmark;
    }
//----------------------------------------------------
//   
//    r_lm_unmark
//    UnMark string
//
//----------------------------------------------------
//
RESOURCE TBUF r_lm_editor_many_categories
    {
	buf = qtn_lm_editor_many_categories;
    }
 
 //----------------------------------------------------
//   
//    r_lmk_guide_create_landmark
//
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_guide_create_landmark
    {
    buf = qtn_lm_guide_create_landmarks;
    }
//----------------------------------------------------
//   
//    r_lmk_empty_no_landmarks
//	  
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_empty_no_landmarks
    {
    buf = qtn_lm_empty_no_landmarks;
    }
//----------------------------------------------------
//   
//    r_lmk_empty_no_match
//	  
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_empty_no_match
    {
    buf = qtn_find_no_matches; 
    }
     
//----------------------------------------------------
//    r_lmk_empty_no_categories
//
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_empty_no_categories
    {
    buf = qtn_lm_empty_no_categories;
    }

//----------------------------------------------------
//   
//    r_lmk_guide_new_category
//
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_guide_new_category
    {
    buf = qtn_lm_guide_new_category;
    }
//----------------------------------------------------
//   
//    r_lmk_error_check_note
//	  Error note
//
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_error_check_note
    {
    buf = qtn_lm_error_check_coordinates;
    }
    
//----------------------------------------------------
//   
//    r_lmk_error_pos_acc_check_note
//	  Error note
//
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_error_pos_acc_check_note
    {
    buf = qtn_lm_error_pos_acc_check;
    }    

//----------------------------------------------------
//   
//    r_lmk_error_alt_acc_check_note
//	  Error note
//
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_error_alt_acc_check_note
    {
    buf = qtn_lm_error_alt_acc_check;
    }

//----------------------------------------------------
//   
//    r_lmk_error_altitude_check_note
//	  Error note
//
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_error_altitude_check_note
    {
    buf = qtn_lm_error_altitude_check;
    }

//----------------------------------------------------
//   
//    r_lmk_error_url_illegal_note
//	  Error note
//
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_error_url_illegal_note
    {
    buf = qtn_lm_error_url_illegal;
    }
    
//----------------------------------------------------
//   
//    r_lmk_msg_query_heading_pane_text
//
//
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_msg_query_heading_pane_text
    {
    buf =qtn_lm_location_request;
    }
//----------------------------------------------------
//   
//    r_lmk_conf_retry_location_request
//
//
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_conf_retry_location_request
    {
    buf =qtn_lm_conf_retry_location_request;
    }

//----------------------------------------------------
//   
//    r_lmk_request_fail_info_text
//
//
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_request_fail_info_text
    {
    buf =qtn_lm_request_fail_info_text;
    }

//----------------------------------------------------
//   
//    r_lmk_request_fail_more_info
//
//
//----------------------------------------------------
//
RESOURCE TBUF r_lmk_request_fail_more_info
    {
    buf =qtn_lm_request_fail_more_info;
    }
//----------------------------------------------------
//   
//    r_lmk_message_query_dialog2
//
//
//----------------------------------------------------
//
RESOURCE DIALOG r_lmk_message_query_dialog2
    {
    flags = EGeneralQueryFlags | EEikDialogFlagNoBorder | EEikDialogFlagNoShadow;
    buttons = R_AVKON_SOFTKEYS_YES_NO;
    items=
        {
        DLG_LINE
            {
            type = EAknCtPopupHeadingPane;
            id = EAknMessageQueryHeaderId;
            control = AVKON_HEADING
                {
                //label = qtn_lm_categories_query_prompt;
                headinglayout = R_AVKON_WML_SIGN_QUERY_HEADING_PANE;
                };
            },
        DLG_LINE
            {
            type = EAknCtMessageQuery;
            id = EAknMessageQueryContentId;
            control = AVKON_MESSAGE_QUERY
                {
                };
            }
        };
    }
 
 //----------------------------------------------------
//   
//    r_lmk_message_query_dialog3
//
//
//----------------------------------------------------
//
RESOURCE DIALOG r_lmk_message_query_dialog3
    {
    flags = EGeneralQueryFlags | EEikDialogFlagNoBorder | EEikDialogFlagNoShadow;
    buttons = R_AVKON_SOFTKEYS_OK_EMPTY;
    items=
        {
        DLG_LINE
            {
            type = EAknCtPopupHeadingPane;
            id = EAknMessageQueryHeaderId;
            control = AVKON_HEADING
                {
                headinglayout = R_AVKON_WML_SIGN_QUERY_HEADING_PANE;
                };
            },
        DLG_LINE
            {
            type = EAknCtMessageQuery;
            id = EAknMessageQueryContentId;
            control = AVKON_MESSAGE_QUERY
                {
                };
            }
        };
    }
// ---------------------------------------------------------
//  Additional resource files
// ---------------------------------------------------------
//
#include "LmkEditor.rss"  
#include "LmkMessaging.rss"

// End of File
